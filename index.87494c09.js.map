{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,SAAS,EAAgB,CAAM,EAC7B,IAAI,EAAS,EAAO,OAAO,CAAC,IAAK,IAIjC,MAAO,CAFP,CAAA,EAAS,EAAO,OAAO,CAAC,IAAK,GAA7B,CAGF,CAEA,I,EAAM,EAAY,SAAS,aAAa,CAAC,SACnC,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAU,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE/B,SAAS,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAS,CAAlD,EACE,EAAQ,gBAAgB,CAAC,QAAS,WAChC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAK,QAAQ,CAAC,EAAM,CAAC,WAAW,CACzC,EAAS,EAAK,QAAQ,CAAC,EAAM,CAAC,WAAW,QAE/C,AAAI,EAAO,UAAU,CAAC,KACb,EAAgB,GAAU,EAAgB,GAG5C,EAAO,aAAa,CAAC,EAC9B,GAEA,EAAU,SAAS,CAAG,GACtB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAU,MAAM,CAAC,E,EACzC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction convertToNumber(string) {\n    var result = string.replace(\"$\", \"\");\n    result = result.replace(\",\", \"\");\n    return +result;\n}\nvar tableBody = document.querySelector(\"tbody\");\nvar rows = _to_consumable_array(tableBody.rows);\ndocument.querySelectorAll(\"th\").forEach(function(rowHead, index) {\n    rowHead.addEventListener(\"click\", function() {\n        rows.sort(function(row1, row2) {\n            var value1 = row1.children[index].textContent;\n            var value2 = row2.children[index].textContent;\n            if (value1.startsWith(\"$\")) return convertToNumber(value1) - convertToNumber(value2);\n            return value1.localeCompare(value2);\n        });\n        tableBody.innerHTML = \"\";\n        rows.forEach(function(row) {\n            return tableBody.append(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.87494c09.js.map\n","'use strict';\n\nfunction convertToNumber(string) {\n  let result = string.replace('$', '');\n\n  result = result.replace(',', '');\n\n  return +result;\n}\n\nconst tableBody = document.querySelector('tbody');\nconst rows = [...tableBody.rows];\n\ndocument.querySelectorAll('th').forEach((rowHead, index) => {\n  rowHead.addEventListener('click', () => {\n    rows.sort((row1, row2) => {\n      const value1 = row1.children[index].textContent;\n      const value2 = row2.children[index].textContent;\n\n      if (value1.startsWith('$')) {\n        return convertToNumber(value1) - convertToNumber(value2);\n      }\n\n      return value1.localeCompare(value2);\n    });\n\n    tableBody.innerHTML = '';\n    rows.forEach((row) => tableBody.append(row));\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","convertToNumber","string","result","replace","tableBody","document","querySelector","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","querySelectorAll","forEach","rowHead","index","addEventListener","sort","row1","row2","value1","children","textContent","value2","startsWith","localeCompare","innerHTML","row","append"],"version":3,"file":"index.87494c09.js.map"}